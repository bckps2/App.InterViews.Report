name: Build and Publish Image

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build_and_publish:
    runs-on: ubuntu-latest
    environment: Dev
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Install OpenSSL
      run: sudo apt-get install openssl
      
    - name: Generate SSL certificate
      run: |
        openssl req -x509 -newkey rsa:4096 -sha256 -nodes -keyout key.pem -out cert.pem -days 365 -subj "/CN=App.InterViews.Report.com"
        openssl pkcs12 -export -out App.InterViews.Report.pfx -inkey key.pem -in cert.pem -passout pass:12345678

    - name: Archive SSL certificate as artifact
      uses: actions/upload-artifact@v2
      with:
        name: ssl-certificate
        path: App.InterViews.Report.pfx

    - name: Set up Docker Build context
      run: |
        mkdir -p docker-context
        cp -R * docker-context/
        
    - name: Copy SSL certificate to Docker build context
      run: cp App.InterViews.Report.pfx docker-context/
    
    - name: Build Docker image
      run: |
        cd docker-context
        docker build -t interviewreportapp .

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0
      with:
        versionSpec: '5.x'
        preferLatestVersion: true

    - name: Determine Version
      id: version
      uses: gittools/actions/gitversion/execute@v0
    
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Tag Docker image
      run: docker tag interviewreportapp ${{ secrets.DOCKER_USERNAME }}/interviewreportapp:${{ steps.version.outputs.buildMetaData  }}
    
    - name: Push Docker image to Docker Hub
      run: docker push ${{ secrets.DOCKER_USERNAME }}/interviewreportapp:${{ steps.version.outputs.buildMetaData  }}

